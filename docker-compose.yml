services:
  # FastAPI Backend - Handles room management and APIs
  fastapi-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi-backend
    ports:
      - "8000:8000"
    environment:
      - SERVER_HOST=localhost:8088
    volumes:
      - ./backend:/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NGINX - RTMP server and web server
  nginx:
    image: nginx-rtmp
    container_name: ${NGINX_HOST}
    build:
      context: nginx
      dockerfile: Dockerfile
      args:
        ENABLED_MODULES: rtmp
    env_file: .env
    ports:
      - "8088:80"          # Web interface and HLS streams
      - "${RTMP_PORT}:${RTMP_PORT}"  # RTMPS ingestion port (SSL termination)
      - "1935:1935"        # Direct RTMP ingestion port
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/rtmp.conf:/etc/nginx/templates/rtmp.conf.template
      - ./nginx/http.conf:/etc/nginx/templates/http.conf.template
      - ./nginx/stream.conf:/etc/nginx/templates/stream.conf.template
      - ./nginx/ssl/rtmps.crt:/etc/ssl/certs/rtmps.crt
      - ./nginx/ssl/rtmps.key:/etc/ssl/private/rtmps.key
      - ./nginx/index.html:/usr/share/nginx/html/index.html
      - ./nginx/room.html:/usr/share/nginx/html/room.html
      - nginx_hls_data:/tmp/hls  # Persistent storage for HLS segments
    depends_on:
      - fastapi-backend
    restart: unless-stopped
    
  # Optional: FFmpeg test streamer (uncomment for testing)
  # ffmpeg-test:
  #   build:
  #     context: ./ffmpeg
  #     dockerfile: Dockerfile
  #   container_name: ffmpeg-test
  #   env_file: .env
  #   depends_on:
  #     - nginx
  #   restart: "no"  # Only run when manually started

volumes:
  nginx_hls_data:
    driver: local